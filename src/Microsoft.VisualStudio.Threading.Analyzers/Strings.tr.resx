<?xml version="1.0" encoding="utf-8"?>
<root>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AwaitXInstead" xml:space="preserve">
    <value>{0} yerine bekliyor</value>
    <comment>"await" is a C# keyword and should not be translated.
{0} is a method name.</comment>
  </data>
  <data name="UseAwaitInstead" xml:space="preserve">
    <value>Kullanım bekliyor bunun yerine</value>
    <comment>"await" is a C# keyword and should not be translated.</comment>
  </data>
  <data name="VSTHRD001_MessageFormat" xml:space="preserve">
    <value>Görevleri veya awaiters zaman uyumlu beklemek tehlikelidir ve ölü kilitleri neden olabilir. Lütfen aşağıdaki seçenekleri göz önünde bulundurun: 1) çağıran bir "zaman uyumsuz" yöntemi ise zaman uyumsuz beklemek-e doğru geçiş yapma. 2) değişiklik zinciri arayanların "zaman uyumsuz" yöntemler ne kadar ve daha sonra zaman uyumsuz olması için bu kodu değiştirmek için bekliyor. 3) görevleri veya awaiters beklemek için JoinableTaskFactory.Run() kullanın. Daha fazla bilgi için http://blogs.msdn.com/b/andrewarnottms/archive/2014/05/07/asynchronous-and-multithreaded-programming-within-vs-using-the-joinabletaskfactory.aspx bakın.</value>
    <comment>"await" is a C# keyword and should not be translated.</comment>
  </data>
  <data name="VSTHRD001_Title" xml:space="preserve">
    <value>Görevleri veya awaiters zaman uyumlu beklemek tehlikelidir ve ölü kilitleri neden olabilir.</value>
  </data>
  <data name="VSTHRD002_MessageFormat" xml:space="preserve">
    <value>"Visual Studio {0}" hizmeti ana iş parçacığı üzerinde açıkça kullanılmalıdır. 
Lütfen ya geçerli iş parçacığı ana iş parçacığı veya anahtar ana iş parçacığı için zaman uyumsuz olarak doğrulayın. 
1) API geçerli iş parçacığı doğrulamak için bu ana iplik: ThreadHelper.ThrowIfNotOnUIThread() veya IThreadHandling.VerifyOnUIThread(). 
2) API'ları için ana geçiş yapmak için iş parçacığı zaman uyumsuz olarak: JoinableTaskFactory.SwitchToMainThreadAsync() veya IThreadHandling.SwitchToUIThread(). Daha fazla bilgi için http://blogs.msdn.com/b/andrewarnottms/archive/2014/05/07/asynchronous-and-multithreaded-programming-within-vs-using-the-joinabletaskfactory.aspx için 
bakın.</value>
  </data>
  <data name="VSTHRD002_Title" xml:space="preserve">
    <value>Visual Studio hizmeti ana iş parçacığı üzerinde açıkça kullanılmalıdır.</value>
  </data>
  <data name="VSTHRD003_MessageFormat" xml:space="preserve">
    <value>Bir zaman uyumlu olmayan geçersiz yöntem dışında herhangi bir özel durumları doğrudan SynchronizationContext üzerinde oluşturulur ve işlem-ecek gürültüyle çarpmak çünkü zaman uyumsuz Void yöntemi, kaçının. Daha fazla bilgi için https://msdn.microsoft.com/en-us/magazine/jj991977.aspx için 
bakın.</value>
    <comment>"async void" is a pair of C# keywords. Do not translate them.</comment>
  </data>
  <data name="VSTHRD003_Title" xml:space="preserve">
    <value>Zaman uyumlu olmayan geçersiz yöntem kaçının.</value>
    <comment>"async void" is a pair of C# keywords. Do not translate them.</comment>
  </data>
  <data name="VSTHRD004_MessageFormat" xml:space="preserve">
    <value>Void döndüren bir zaman uyumsuz lambda dışarı atılan özel durumları doğrudan SynchronizationContext üzerinde oluşturulur ve işlem-ecek gürültüyle çarpmak çünkü geçersiz geri dönen temsilci türü olarak, zaman uyumsuz lambda kullanmaktan kaçının. Daha fazla bilgi için https://msdn.microsoft.com/en-us/magazine/jj991977.aspx için 
bakın.</value>
    <comment>"void" is a C# keyword and should not be translated.</comment>
  </data>
  <data name="VSTHRD004_Title" xml:space="preserve">
    <value>Zaman uyumsuz lambda geçersiz geri dönen temsilci türü olarak kullanılıyor.</value>
  </data>
  <data name="VSTHRD005_MessageFormat" xml:space="preserve">
    <value>AsyncEventHandler temsilcileri ile "TplExtensions.InvokeAsync()" Microsoft.VisualStudio.Threading derlemede tanımlanmış genişletme yöntemi çağrılması.</value>
  </data>
  <data name="VSTHRD005_Title" xml:space="preserve">
    <value>AsyncEventHandler temsilcileri ile "TplExtensions.InvokeAsync()" Microsoft.VisualStudio.Threading derlemede tanımlanmış genişletme yöntemi çağrılması.</value>
  </data>
  <data name="VSTHRD006_MessageFormat" xml:space="preserve">
    <value>Arama bekliyor bir JoinableTaskFactory.Run içinde bir görevde görev temsilci dışında ne zaman başlatılır olası kilitlenmeleri neden olabilir. Görev sağlayarak bu sorunu önleyebilirsiniz 
içinde temsilcinin veya görev yerine JoinableTask kullanarak başlatıldı.</value>
  </data>
  <data name="VSTHRD006_Title" xml:space="preserve">
    <value>Arama kaçının olası kilitlenmeleri önlemek için temsilci dışında görev tanımladığınızda görev içinde "JoinableTaskFactory.Run" temsilci bekliyor.</value>
  </data>
  <data name="VSTHRD007_MessageFormat" xml:space="preserve">
    <value>Tembel&lt;Task&lt;T&gt;&gt;arıyorum. Değer fabrika önceden başlatıldığı değeri kilitlenme. 
AsyncLazy&lt;T&gt; yerine kullanmanız gerekir.</value>
  </data>
  <data name="VSTHRD007_Title" xml:space="preserve">
    <value>Tembel &lt;T&gt;  T bir görev nerede kullanmaktan kaçının.</value>
  </data>
  <data name="VSTHRD008_MessageFormat" xml:space="preserve">
    <value>{0} üyesi zaman uyumlu olarak engeller. {1} çağırın ve sonucunu bekliyor.</value>
  </data>
  <data name="VSTHRD008_MessageFormat_UseAwaitInstead" xml:space="preserve">
    <value>{0} üyesi zaman uyumlu olarak engeller. Kullanım yerine bekliyor.</value>
  </data>
  <data name="VSTHRD008_Title" xml:space="preserve">
    <value>Bir zaman uyumsuz yöntem ne zaman awaitable alternatifleri ara.</value>
  </data>
  <data name="VSTHRD009_MessageFormat" xml:space="preserve">
    <value>Zaman uyumlu olarak burada zaman uyumlu olmalıdır genel giriş noktası üyeler için JoinableTaskFactory.Run veya Task.Result gibi yöntem çağrıları engelleme sınırı kullanın. İç üyeleri için kullanarak gereksiz yere zaman uyumlu Çerçeveler arasında iş parçacığı havuzu tükenme için önde gelen zaman uyumsuz çerçeve ekleyebilirsiniz.</value>
  </data>
  <data name="VSTHRD009_Title" xml:space="preserve">
    <value>Halka açık olmayan yöntemleri zaman uyumlu blok kaçının.</value>
  </data>
  <data name="VSTHRD010_CodeFix_Title" xml:space="preserve">
    <value>{0} için yeniden adlandırın.</value>
    <comment>{0} is a method name.</comment>
  </data>
  <data name="VSTHRD010_MessageFormat" xml:space="preserve">
    <value>"Zaman uyumsuz" son eki görev döndüren yöntemi adlarında kullanın.</value>
  </data>
  <data name="VSTHRD010_Title" xml:space="preserve">
    <value>"Zaman uyumsuz" son eki görev döndüren yöntemi adlarında kullanın.</value>
  </data>
  <data name="VSTHRD011_MessageFormat" xml:space="preserve">
    <value>TaskScheduler.Current varsayıyorum yöntem yüklemesi kaçının. TaskScheduler.Default (veya diğer) açıkça belirtmek ve bir TaskScheduler kabul eden bir yükleme kullanın.</value>
  </data>
  <data name="VSTHRD011_Title" xml:space="preserve">
    <value>TaskScheduler.Current varsayıyorum yöntem yüklemesi kaçınmak</value>
  </data>
  <data name="VSTHRD003_CodeFix_Title" xml:space="preserve">
    <value>Göreve dönüş türünü değiştir</value>
    <comment>Task is a type name and should not be translated.</comment>
  </data>
</root>